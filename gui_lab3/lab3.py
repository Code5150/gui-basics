# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'lab3.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidgetItem

import book
from book import Book
from db import DatabaseConnection


class ui_MainWindow(object):

    def __init__(self):
        self.databaseConnection = DatabaseConnection()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout.setSpacing(6)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout_2.addWidget(self.pushButton_3, 1, 1, 1, 1)
        self.pushButton_3.clicked.connect(self.expensiveClicked)

        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox.sizePolicy().hasHeightForWidth())
        self.comboBox.setSizePolicy(sizePolicy)
        self.comboBox.setObjectName("comboBox")
        self.comboBoxOptions = {
            'ID': 'id',
            "Название": 'name',
            "Автор": 'author',
            "Описание": 'description',
            'Жанр': 'genre',
            "Цена": 'price'
        }
        for o, _ in self.comboBoxOptions.items():
            self.comboBox.addItem(o)
        self.comboBox.currentTextChanged.connect(self.comboBoxChanged)
        self.gridLayout_2.addWidget(self.comboBox, 0, 1, 1, 1)

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_2.addWidget(self.pushButton, 0, 0, 1, 1)
        self.pushButton.clicked.connect(self.namesButtonClicked)

        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.twoAuthorsClicked)

        self.gridLayout_2.addWidget(self.pushButton_2, 1, 0, 1, 1)
        self.gridLayout_2.setRowStretch(0, 1)
        self.gridLayout_2.setRowStretch(1, 2)
        self.horizontalLayout.addLayout(self.gridLayout_2)
        self.horizontalLayout.setStretch(0, 1)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setSpacing(6)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab.sizePolicy().hasHeightForWidth())

        self.tab.setSizePolicy(sizePolicy)
        self.tab.setObjectName("tab")

        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.tab)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.verticalLayoutTab1 = QtWidgets.QVBoxLayout()
        self.verticalLayoutTab1.setObjectName("verticalLayoutTab1")

        self.tableWidget = QtWidgets.QTableWidget(self.tab)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setHorizontalHeaderLabels(["Название", "Автор", "Описание", 'Жанр', "Цена"])
        self.tableWidget.setRowCount(1)
        self.verticalLayoutTab1.addWidget(self.tableWidget)

        self.verticalLayout_3.addLayout(self.verticalLayoutTab1)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")

        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.tab_2)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.verticalLayoutTab2 = QtWidgets.QVBoxLayout()
        self.verticalLayoutTab2.setObjectName("verticalLayoutTab2")

        self.tableWidget_2 = QtWidgets.QTableWidget(self.tab_2)
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(1)
        self.tableWidget_2.setHorizontalHeaderLabels(["Название"])
        self.tableWidget_2.setRowCount(1)
        self.verticalLayoutTab2.addWidget(self.tableWidget_2)

        self.verticalLayout_5.addLayout(self.verticalLayoutTab2)
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tab_3)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.verticalLayoutTab3 = QtWidgets.QVBoxLayout()
        self.verticalLayoutTab3.setObjectName("verticalLayoutTab3")

        self.tableWidget_3 = QtWidgets.QTableWidget(self.tab_3)
        self.tableWidget_3.setObjectName("tableWidget_3")
        self.tableWidget_3.setColumnCount(1)
        self.tableWidget_3.setHorizontalHeaderLabels([self.comboBox.itemText(self.comboBox.currentIndex())])
        self.tableWidget_3.setRowCount(1)
        self.verticalLayoutTab3.addWidget(self.tableWidget_3)

        self.verticalLayout_4.addLayout(self.verticalLayoutTab3)
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.tab_4)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.verticalLayoutTab4 = QtWidgets.QVBoxLayout()
        self.verticalLayoutTab4.setObjectName("verticalLayoutTab4")

        self.tableWidget_4 = QtWidgets.QTableWidget(self.tab_4)
        self.tableWidget_4.setObjectName("tableWidget_4")
        self.tableWidget_4.setColumnCount(5)
        self.tableWidget_4.setHorizontalHeaderLabels(["Название", "Автор", "Описание", 'Жанр', "Цена"])
        self.tableWidget_4.setRowCount(1)
        self.verticalLayoutTab4.addWidget(self.tableWidget_4)

        self.verticalLayout_7.addLayout(self.verticalLayoutTab4)
        self.tabWidget.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.tab_5)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.verticalLayoutTab5 = QtWidgets.QVBoxLayout()
        self.verticalLayoutTab5.setObjectName("verticalLayoutTab5")

        self.tableWidget_5 = QtWidgets.QTableWidget(self.tab_5)
        self.tableWidget_5.setObjectName("tableWidget_5")
        self.tableWidget_5.setColumnCount(5)
        self.tableWidget_5.setHorizontalHeaderLabels(["Название", "Автор", "Описание", 'Жанр', "Цена"])
        self.tableWidget_5.setRowCount(1)
        self.verticalLayoutTab5.addWidget(self.tableWidget_5)

        self.verticalLayout_9.addLayout(self.verticalLayoutTab5)
        self.tabWidget.addTab(self.tab_5, "")
        self.horizontalLayout_2.addWidget(self.tabWidget)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.verticalLayout.setStretch(0, 1)
        self.verticalLayout.setStretch(1, 2)
        self.gridLayout.addLayout(self.verticalLayout, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        self.menuConnection = QtWidgets.QMenu(self.menubar)
        self.menuConnection.setObjectName("menuConnection")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionSet = QtWidgets.QAction(MainWindow)
        self.actionSet.setObjectName("actionSet")
        self.actionSet.triggered.connect(self.connectDb)
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.actionClose.triggered.connect(self.disconnectDb)
        self.menuConnection.addAction(self.actionSet)
        self.menuConnection.addAction(self.actionClose)
        self.menubar.addAction(self.menuConnection.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(4)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def connectDb(self):
        self.databaseConnection.connect_db()
        rowCount = 0
        rows = Book.select()
        table = self.tableWidget
        print(rows.sql())
        for row in rows:
            table.insertRow(rowCount)
            table.setItem(rowCount, 0, QTableWidgetItem(row.name))
            table.setItem(rowCount, 1, QTableWidgetItem(row.author))
            table.setItem(rowCount, 2, QTableWidgetItem(row.description))
            table.setItem(rowCount, 3, QTableWidgetItem(row.genre))
            table.setItem(rowCount, 4, QTableWidgetItem(str(row.price)))
            rowCount += 1
        table.setRowCount(rowCount)

    def disconnectDb(self):
        self.databaseConnection.close_db()
        tables = [self.tableWidget, self.tableWidget_2, self.tableWidget_3, self.tableWidget_4, self.tableWidget_5]
        for table in tables:
            for c in range(table.rowCount(), -1, -1):
                table.removeRow(c)

    def namesButtonClicked(self):
        if self.databaseConnection.connected():
            table = self.tableWidget_2
            table.setHorizontalHeaderLabels(['Название'])
            rowCount = 0
            rows = Book.select()
            print(rows.sql())
            for row in rows:
                table.insertRow(rowCount)
                table.setItem(rowCount, 0, QTableWidgetItem(row.name))
                rowCount += 1
            table.setRowCount(rowCount)

    def comboBoxChanged(self, a0: str):
        if self.databaseConnection.connected():
            table = self.tableWidget_3
            table.setHorizontalHeaderLabels([a0])
            rowCount = 0
            rows = Book.select()
            print(rows.sql())
            for row in rows:
                table.insertRow(rowCount)
                table.setItem(rowCount, 0, QTableWidgetItem(str(row.get_by_attr_name(self.comboBoxOptions[a0]))))
                rowCount += 1
            table.setRowCount(rowCount)

    def twoAuthorsClicked(self):
        if self.databaseConnection.connected():
            table = self.tableWidget_4
            rowCount = 0
            rows = Book.select().where(Book.author ** '%,%')
            print(rows.sql())
            for row in rows:
                table.insertRow(rowCount)
                table.setItem(rowCount, 0, QTableWidgetItem(row.name))
                table.setItem(rowCount, 1, QTableWidgetItem(row.author))
                table.setItem(rowCount, 2, QTableWidgetItem(row.description))
                table.setItem(rowCount, 3, QTableWidgetItem(row.genre))
                table.setItem(rowCount, 4, QTableWidgetItem(str(row.price)))
                rowCount += 1
            table.setRowCount(rowCount)

    def expensiveClicked(self):
        if self.databaseConnection.connected():
            table = self.tableWidget_5
            rowCount = 0
            rows = Book.select().where(Book.price > 2000)
            print(rows.sql())
            for row in rows:
                table.insertRow(rowCount)
                table.setItem(rowCount, 0, QTableWidgetItem(row.name))
                table.setItem(rowCount, 1, QTableWidgetItem(row.author))
                table.setItem(rowCount, 2, QTableWidgetItem(row.description))
                table.setItem(rowCount, 3, QTableWidgetItem(row.genre))
                table.setItem(rowCount, 4, QTableWidgetItem(str(row.price)))
                rowCount += 1
            table.setRowCount(rowCount)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_3.setText(_translate("MainWindow", "Книги дороже 2000"))
        self.pushButton.setText(_translate("MainWindow", "Названия"))
        self.pushButton_2.setText(_translate("MainWindow", "Книги с 2 и более авторами"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Вкладка 1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Вкладка 2"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Вкладка 3"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "Вкладка 4"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_5), _translate("MainWindow", "Вкладка 5"))
        self.menuConnection.setTitle(_translate("MainWindow", "База данных"))
        self.actionSet.setText(_translate("MainWindow", "Установить соединиение"))
        self.actionClose.setText(_translate("MainWindow", "Разорвать соединение"))

    def onClose(self):
        self.databaseConnection.close_db()
